[{"/Users/koko/Documents/foodie/foodie_front/src/index.js":"1","/Users/koko/Documents/foodie/foodie_front/src/App.js":"2","/Users/koko/Documents/foodie/foodie_front/src/reportWebVitals.js":"3","/Users/koko/Documents/foodie/foodie_front/src/components/header.jsx":"4","/Users/koko/Documents/foodie/foodie_front/src/components/login_user.jsx":"5","/Users/koko/Documents/foodie/foodie_front/src/components/login_email.jsx":"6","/Users/koko/Documents/foodie/foodie_front/src/components/register.jsx":"7","/Users/koko/Documents/foodie/foodie_front/src/components/result.jsx":"8","/Users/koko/Documents/foodie/foodie_front/src/components/not_found.jsx":"9","/Users/koko/Documents/foodie/foodie_front/src/i18n.js":"10","/Users/koko/Documents/foodie/foodie_front/src/components/activation.jsx":"11","/Users/koko/Documents/foodie/foodie_front/src/components/main.jsx":"12","/Users/koko/Documents/foodie/foodie_front/src/components/resendactivation.jsx":"13"},{"size":500,"mtime":1612242829946,"results":"14","hashOfConfig":"15"},{"size":1346,"mtime":1623545829009,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611946530961,"results":"17","hashOfConfig":"15"},{"size":3097,"mtime":1628913048800,"results":"18","hashOfConfig":"15"},{"size":3548,"mtime":1622131247616,"results":"19","hashOfConfig":"15"},{"size":5438,"mtime":1623551274852,"results":"20","hashOfConfig":"15"},{"size":12955,"mtime":1623522720004,"results":"21","hashOfConfig":"15"},{"size":2277,"mtime":1623549948280,"results":"22","hashOfConfig":"15"},{"size":659,"mtime":1622131244315,"results":"23","hashOfConfig":"15"},{"size":730,"mtime":1622398888238,"results":"24","hashOfConfig":"15"},{"size":1887,"mtime":1629069136122,"results":"25","hashOfConfig":"15"},{"size":226,"mtime":1622738829065,"results":"26","hashOfConfig":"15"},{"size":3215,"mtime":1623523786974,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14qef50",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/koko/Documents/foodie/foodie_front/src/index.js",[],["61","62"],"/Users/koko/Documents/foodie/foodie_front/src/App.js",[],"/Users/koko/Documents/foodie/foodie_front/src/reportWebVitals.js",[],"/Users/koko/Documents/foodie/foodie_front/src/components/header.jsx",["63","64","65","66","67"],"import React, { Component } from 'react';\nimport '../assets/css/header.css'\nimport 'antd/dist/antd.css';\nimport LogoImage from \"../assets/image/logo.png\";\nimport { Menu, Dropdown,Input ,Row, Col,Select} from 'antd';\nimport { withTranslation,useTranslation } from 'react-i18next';\nimport { UserOutlined,SettingOutlined,DownOutlined  } from '@ant-design/icons';\n@withTranslation()\nclass Header extends Component {\n    state = {  }\n    render() { \n    const { Search } = Input;\n    const { Option } = Select;\n    const { t, i18n } = this.props\n    const onSearch =(values) =>{\n\n    }\n    const handleChange = (values)=>{\n        console.log(values)\n        i18n.changeLanguage(values)\n\n    }\n        return ( \n            <div className=\"header\">\n                <Row>\n                <Col \n                    xs={{ span: 6 }}\n                    sm={{ span: 4 }}\n                    md={{ span: 2 }}\n                    lg={{ span: 2 }}\n                >\n                <img src={LogoImage} className=\"logo\"/>\n                \n                </Col>\n                <Col \n                    xs={{ span: 0 }}\n                    sm={{ span: 0 }}\n                    md={{ span: 2 }}\n                    lg={{ span: 2 }}\n                className = \"text\">\n                Foodie\n                </Col>\n                <Col \n                    xs={{ span: 0 }}\n                    sm={{ span: 0 }}\n                    md={{ span: 2 }}\n                    lg={{ span: 2 }}\n                >\n                </Col>\n                <Col \n                    xs={{ span: 16 }}\n                    sm={{ span: 12 }}\n                    md={{ span: 8 }}\n                    lg={{ span: 8 }}\n                    className = \"search\"\n                >\n                 <Search\n                placeholder={t('searchtext')}\n                allowClear\n                enterButton={t('search')}\n                size=\"large\"\n                onSearch={onSearch}\n                \n                /> \n                </Col>\n                <Col \n                    xs={{ span: 0 }}\n                    sm={{ span: 0 }}\n                    md={{ span: 4 }}\n                    lg={{ span: 4 }}\n                    className=\"language\"\n                >\n                <Select defaultValue=\"zh\" style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"zh\"> {t('chinese')}</Option>\n                    <Option value=\"en\">{t('english')}</Option>\n        \n                </Select>\n\n                </Col>\n                <Col \n                    xs={{ span: 2 }}\n                    sm={{ span: 3 }}\n                    md={{ span: 0}}\n                    lg={{ span: 0 }}\n                >\n\n                <SettingOutlined />\n\n                </Col>\n                <Col \n                    xs={{ span: 4 }}\n                    sm={{ span: 2 }}\n                    md={{ span: 2 }}\n                    lg={{ span: 2 }}\n                >\n                    <UserOutlined />\n                </Col>\n                </Row>\n\n            </div>\n         );\n    }\n}\n \nexport default Header;","/Users/koko/Documents/foodie/foodie_front/src/components/login_user.jsx",["68","69","70"],"import React, { Component } from \"react\";\n// import Logo from './login.jsx';\n\nimport LogoImage from \"../assets/image/logo.png\";\nimport \"antd/dist/antd.css\";\nimport \"../assets/css/all.css\";\n\nimport { Form, Input, Button, Row, Col, Avatar,Checkbox } from \"antd\";\n\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\n@withTranslation()\nclass LoginUser extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Row>\n          <Col\n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n          <Col\n            xs={{ span: 22 }}\n            sm={{ span: 18 }}\n            md={{ span: 12 }}\n            lg={{ span: 8 }}\n          >\n            <div className=\"form_div\">\n              <div className=\"inner_center\">\n                <Avatar\n                  size={{\n                    xs: 60,\n                    sm: 70,\n                    md: 80,\n                    lg: 90,\n                    xl: 100,\n                    xxl: 110,\n                  }}\n                  src={LogoImage}\n                />\n                <h2>{this.props.t('loginuser')} </h2>\n              </div>\n              <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                  remember: true,\n                }}\n            \n              >\n                <Form.Item\n                  name=\"username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: this.props.t('warningusername'),\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                    placeholder={this.props.t('username')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: this.props.t('warningpassword'),\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder={this.props.t('password')}\n                  />\n                </Form.Item>\n                <Form.Item>\n                  \n                  <a  href='../loginemail'>\n                  {this.props.t('loginemail')}\n                  </a>\n                  <a className=\"right_float\" href=\"\">\n                    {this.props.t('forgetpassword')}\n                  </a>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                  >\n                    {this.props.t('login')}\n                  </Button>\n                  {this.props.t('or')} <a href=\"\">{this.props.t('register')}</a>\n                </Form.Item>\n              </Form>\n            </div>\n          </Col>\n\n          <Col\n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n        </Row>\n\n       \n      </div>\n    );\n  }\n}\n\nexport default LoginUser;\n","/Users/koko/Documents/foodie/foodie_front/src/components/login_email.jsx",["71","72","73","74","75","76","77","78","79"],"import React, { Component } from \"react\";\n// import Logo from './login.jsx';\n\nimport LogoImage from \"../assets/image/logo.png\";\nimport \"antd/dist/antd.css\";\nimport \"../assets/css/all.css\";\nimport \"../assets/css/register.css\";\n\nimport { Form, Input, Button, Row, Col, Avatar,message } from \"antd\";\n\nimport {  LockOutlined,MailFilled } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\nimport axios from \"axios\";\nimport qs from \"qs\";\n@withTranslation()\nclass LoginEmail extends Component {\n  login = (values) =>{\n    axios.post(\"/v1/users/loginbyemail\", qs.stringify({password:values.password,email:values.email }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n    }).then(response =>{\n      if (response.data.result ==200){\n        this.props.history.push({ pathname:'../userresult',query:{stage:\"register200\",email:values.email} })\n\n      }\n     else if (response.data.result==403){\n       message.info(this.props.t(\"loginemailinactive\"))\n        \n     }\n     else if(response.data.result ==401){\n      message.info(this.props.t(\"loginemailinvalid\"))\n\n\n     }\n     else{\n\n     }\n    }\n\n    );\n\n  }\n  render() {\n    const {t} = this.props\n    const onFinish  = (values) => {\n      axios.post(\"../v1/users/loginbyemail\", qs.stringify({password:values.password,email:values.email }), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n        },\n      }).then(response =>{\n        if (response.data.result ==200){\n          this.props.history.push({ pathname:'./userresult',state:{stage:\"login200\"} })\n          localStorage.setItem('token',response.data.token)\n          localStorage.setItem('expiredTime',new Date(Date.now() + (30 * 60 * 1000)))\n  \n        }\n       else if (response.data.result==403){\n         message.info(this.props.t(\"loginemailinactive\"))\n          \n       }\n       else if(response.data.result ==401){\n        message.info(this.props.t(\"loginemailinvalid\"))\n  \n  \n       }\n       else{\n  \n       }\n      }\n  \n      );\n  \n    }\n    const onFinishFailed = (errInfo) =>{\n      console.log(\"FailInfo\",errInfo)\n      \n    }\n    \n    return (\n      <div className=\"container\">\n        <Row>\n          <Col\n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n          <Col\n            xs={{ span: 22 }}\n            sm={{ span: 18 }}\n            md={{ span: 12 }}\n            lg={{ span: 8 }}\n          >\n            <div className=\"form_div\">\n              <div className=\"inner_center\">\n                <Avatar\n                  size={{\n                    xs: 60,\n                    sm: 70,\n                    md: 80,\n                    lg: 90,\n                    xl: 100,\n                    xxl: 110,\n                  }}\n                  src={LogoImage}\n                />\n                <h2>{this.props.t('loginemail')} </h2>\n              </div>\n              <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish = {onFinish}\n                onFinishFailed = {onFinishFailed}\n            \n              >\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: this.props.t('warningemail1'),\n                    },\n                    {\n                      required: true,\n                      message: this.props.t('warningemail2'),\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<MailFilled className=\"site-form-item-icon\" />}\n                    placeholder={this.props.t('email')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: this.props.t('warningpassword'),\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder={this.props.t('password')}\n                  />\n                </Form.Item>\n                \n                <Form.Item>\n                  \n                  <a  href='../loginusername'>\n                    {this.props.t('loginuser')}\n                  </a>\n                  <a className=\"right_float\" href=\"\">\n                  {this.props.t('forgetpassword')}\n                  </a>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                  >\n                    {this.props.t('login')}\n                  </Button>\n                  {this.props.t('or')} <a href=\"\">{this.props.t('register')}</a>\n                </Form.Item>\n              </Form>\n            </div>\n          </Col>\n\n          <Col\n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n        </Row>\n\n       \n      </div>\n    );\n  }\n}\n\nexport default LoginEmail;\n","/Users/koko/Documents/foodie/foodie_front/src/components/register.jsx",["80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { Component } from \"react\";\n// import Logo from './login.jsx';\n\nimport LogoImage from \"../assets/image/logo.png\";\nimport \"antd/dist/antd.css\";\nimport \"../assets/css/all.css\";\nimport RefreshImage from \"../assets/image/refresh-icon.svg\";\n\nimport { Form, Input, Button, Row, Col, Avatar, message, Checkbox,Modal } from \"antd\";\nimport { withTranslation } from 'react-i18next';\n\n\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailFilled,\n  ReloadOutlined,\n} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n\n@withTranslation()\nclass Register extends Component {\n  \n  \n  constructor(props) {\n    super(props);\n    \n\n    // this.refreshCaptha = this.refreshCaptha.bind(this)\n    this.state = {\n      captcha: \"\",\n      \n      isModalVisible:false , \n      setIsModalVisible:false \n    };\n    \n  \n    \n  }\n  showModal = () => {\n    console.log(\"arrive there\")\n    this.setState({isModalVisible:true})\n \n  };\n\n  handleOk = () => {\n    this.setState({isModalVisible:false})\n    \n  };\n\n  handleCancel = () => {\n    this.setState({isModalVisible:false})\n    \n  };\n  \n  componentDidMount() {\n    this.getCaptha();\n  }\n\n  getCaptha = () => {\n    axios.get(\"../v1/users/getcaptcha\").then((response) => {\n      if (response.data.result == 200) {\n        let img_base64 = \"data:image/png;base64,\" + response.data.captcha;\n        this.setState({ captcha: img_base64 });\n      }\n    });\n  };\n  refreshCaptha = () =>{\n  let refreshIcon = document.getElementById(\"refresh-icon\")\n  let refreshButton = document.getElementById(\"refresh-button\")\n  refreshButton.removeAttribute(\"class\")\n  refreshButton.disabled = true\n  setTimeout(()=>{\n\n    refreshIcon.addEventListener(\"animationiteration\", () =>{\n    refreshButton.setAttribute(\"class\", \"refresh-end\")\n    refreshButton.disabled = false\n    this.getCaptha()\n  })\n  },100)\n\n\n  }\n  \n\n  render() {\n    const { t, i18n } = this.props\n    const onFinish =  (values) => {\n      console.log(\"arrive there\")\n      axios.post(\"../v1/users/register\", qs.stringify({username: values.username,password:values.password,email:values.email }), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n        },\n      }).then(response =>{\n        if (response.data.result ==200){\n        \n          this.props.history.push({ pathname:'./userresult',state:{\"stage\":\"register200\"}})\n  \n        }\n        else if(response.data.result==409){\n          message.info(t('registerused'))\n         }\n        else{\n          message.info(t('requesterr'))\n        }\n  \n  \n      }\n  \n      );\n\n    }\n    const onFinishFailed = (errorInfo) =>{\n     \n      console.log(\"Fails\",errorInfo)\n    }\n\n\n    \n  \n    return (\n      <div className=\"container\">\n        <Row>\n          <Col \n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n          <Col\n            xs={{ span: 22 }}\n            sm={{ span: 18 }}\n            md={{ span: 12 }}\n            lg={{ span: 8 }}\n          >\n            <div className=\"form_div\">\n              <div className=\"inner_center\">\n                <Avatar\n                  size={{\n                    xs: 60,\n                    sm: 70,\n                    md: 80,\n                    lg: 90,\n                    xl: 100,\n                    xxl: 110,\n                  }}\n                  src={LogoImage}\n                />\n                <h2>{t('register')} </h2>\n              </div>\n              <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                // initialValues={{\n                //   remember: true,\n                // }}\n              >\n                <Form.Item\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  name=\"username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: this.props.t('warningusername'),\n                    },\n                    {\n                      validator: (_, value) => {\n                        return new Promise((resolve, reject) => {\n                          if (value) {\n                            axios\n                              .post(\n                                \"../v1/users/checkusername\",\n                                qs.stringify({ username: value }),\n                                {\n                                  headers: {\n                                    \"Content-Type\":\n                                      \"application/x-www-form-urlencoded;charset=utf-8\",\n                                  },\n                                }\n                              )\n                              .then((response) => {\n                                if (response.data.result == 200) {\n                                  resolve();\n                                } else {\n                                  reject(response.data.msg);\n                                }\n                              });\n                          } else {\n                            reject();\n                          }\n                        });\n                      },\n                      validateTrigger: \"onBlur\",\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                    placeholder={t('username')}\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"email\"\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      type: \"email\",\n                      message: t('warningemail1'),\n                    },\n                    {\n                      required: true,\n                      message: t('warningemail2'),\n                    },\n                    {\n                      validator: (_, value) => {\n                        return new Promise((resolve, reject) => {\n                          if (value) {\n                            axios\n                              .post(\n                                \"../v1/users/checkemail\",\n                                qs.stringify({ email: value }),\n                                {\n                                  headers: {\n                                    \"Content-Type\":\n                                      \"application/x-www-form-urlencoded;charset=utf-8\",\n                                  },\n                                }\n                              )\n                              .then((response) => {\n                                if (response.data.result == 200) {\n                                  resolve();\n                                } else {\n                                  reject(response.data.msg);\n                                }\n                              });\n                          } else {\n                            reject();\n                          }\n                        });\n                      },\n                      validateTrigger: \"onBlur\",\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<MailFilled className=\"site-form-item-icon\" />}\n                    placeholder={t('email')}\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: this.props.t('warningpassword'),\n                    },\n                  ]}\n                >\n                  <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder={this.props.t('password')}\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"confirm\"\n                  dependencies={[\"password\"]}\n                  rules={[\n                    {\n                      required: true,\n                      message: this.props.t('warningpassword'),\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(_, value) {\n                        if (!value || getFieldValue(\"password\") === value) {\n                          return Promise.resolve();\n                        }\n\n                        return Promise.reject(\n                          \"The two passwords that you entered do not match!\"\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder= {this.props.t('confirmpassword')}\n                  />\n                </Form.Item>\n                <Form.Item extra= {t('captchaextra')}>\n                  <Row>\n                    <Col span={12}>\n                      <Form.Item\n                        name=\"captcha\"\n                        validateTrigger={[\"onChange\", \"onBlur\"]}\n                        noStyle\n                        rules={[\n                          {\n                            required: true,\n                            message: this.props.t('captchawarning'),\n                          },\n                          {\n                            validateTrigger: \"onBlur\",\n                            validator: (_, value) => {\n                              return new Promise((resolve, reject) => {\n                                if (value) {\n                                  axios\n                                    .post(\n                                      \"../v1/users/verifycaptcha\",\n                                      qs.stringify({ code: value }),\n                                      {\n                                        headers: {\n                                          \"Content-Type\":\n                                            \"application/x-www-form-urlencoded;charset=utf-8\",\n                                        },\n                                      }\n                                    )\n                                    .then((response) => {\n                                      if (response.data.result == 200) {\n                                        resolve();\n                                      } else {\n                                        reject(\"your captcha is wrong\");\n                                      }\n                                    });\n                                } else {\n                                  reject();\n                                }\n                              });\n                            },\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                      <img src={this.state.captcha} />\n                      <a onClick={this.refreshCaptha} id=\"refresh-button\"  className=\"refresh-end\"><img id=\"refresh-icon\" height=\"12\" src={RefreshImage} className=\"refresh-start\"/> </a>\n                    </Col>\n                  </Row>\n                </Form.Item>\n                <Form.Item \n                 name=\"agreement\"\n                 valuePropName=\"checked\"\n                 rules={[\n                   {\n                     validator: (_, value) =>\n                       value\n                         ? Promise.resolve()\n                         : Promise.reject(t('agreementnotselect'))\n                   }\n                 ]} >\n                <Checkbox >I agree to the <a onClick={this.showModal}>terms and conditions</a> </Checkbox>\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                   \n                  >\n                    {t('register')}\n                  </Button>\n                  {t('or')} <a href=\"../loginemail\">{t('login')}</a>\n                </Form.Item>\n              </Form>\n            </div>\n          </Col>\n\n          <Col\n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n        </Row>\n        <Modal title=\"Terms and conditions\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel}>\n        <h1>Terms and conditions of software</h1>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/Users/koko/Documents/foodie/foodie_front/src/components/result.jsx",["92","93","94"],"import React, { Component  } from 'react';\nimport { Result, Button, message} from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport axios from \"axios\";\nimport qs from \"qs\";\n\n@withTranslation()\nclass UserResult extends Component {\n  \n    constructor(props) {\n        super(props);\n        if (this.props.location.state.stage ==\"register200\"){\n                this.state ={\n                title : this.props.t('successregtitle'),\n                subtitle: this.props.t('successregsubtitle'),\n                status: \"success\",\n                button1:this.props.t('resendactive'),\n                action1: this.resendactive,\n            }\n            \n        }\n        else if (this.props.location.state.stage ==\"login200\"){\n            this.state ={\n                title : this.props.t('successregtitle'),\n                subtitle: this.props.t('successregsubtitle'),\n                status: \"success\",\n                button1:this.props.t('redirectindex'),\n                action1: this.redirectindex,\n            }\n\n\n        }\n       \n    }\n    resendactive = () =>{\n        \n        axios.post(\"../v1/users/resendactive\", qs.stringify({email:this.props.location.query.email }), {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n            },\n          }).then(response =>{\n            if (response.data.result ==200){\n                message.info(this.props.t('resendactivesuc'));\n            }\n            else{\n                message.info(this.props.t('requesterr'))\n            }\n            \n          }\n      \n          );\n    }\n    redirectindex = () =>{\n        this.props.history.push({ pathname:'../' })\n    }\n\n\n\n   \n\n    render() { \n    \n\n    \n        \n        return (\n         \n            <Result\n            status={this.state.status}\n            title= {this.state.title}\n            subTitle={this.state.subtitle}\n            className=\"container\"\n            extra={[\n                <Button type=\"primary\" key=\"console\" onClick={this.state.action1}>\n                {this.props.t(this.state.button1)}\n                </Button>\n               \n              \n               \n              \n            ]}\n          />\n         \n     \n          );\n    }\n}\n \nexport default UserResult;","/Users/koko/Documents/foodie/foodie_front/src/components/not_found.jsx",[],"/Users/koko/Documents/foodie/foodie_front/src/i18n.js",[],"/Users/koko/Documents/foodie/foodie_front/src/components/activation.jsx",["95","96","97","98","99","100","101","102","103"],"/Users/koko/Documents/foodie/foodie_front/src/components/main.jsx",[],"/Users/koko/Documents/foodie/foodie_front/src/components/resendactivation.jsx",["104","105","106","107"],"import React, { Component } from 'react';\nimport { Form, Input, Button, Row, Col, Avatar, message, Checkbox,Modal } from \"antd\";\nimport { withTranslation } from 'react-i18next';\nimport \"../assets/css/all.css\";\nimport {MailFilled} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n@withTranslation()\nclass ResendActivation extends Component {\n    state = {  }\n    render() { \n        const {t} = this.props\n        const onFinish = (values) =>{\n          axios.post(\"../v1/users/resendactive\", qs.stringify({email:values.email }), {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n            },\n          }).then(response =>{\n            if (response.data.result ==200){\n                message.info(t('resendactivesuc'));\n            }\n            else{\n              message.info(t('requesterr'));\n            }\n            // need to add more message\n          }\n      \n          );\n          \n\n        }\n        const onFinishFailed = (values) =>{\n\n        }\n        return ( \n            <div className=\"container\">\n                <Row>\n          <Col \n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n          <Col\n            xs={{ span: 22 }}\n            sm={{ span: 18 }}\n            md={{ span: 12 }}\n            lg={{ span: 8 }}\n          >\n            <div className=\"form_div\">\n              <div className=\"inner_center\">\n               \n                <h2>{t('resendacttitle')} </h2>\n              </div>\n              <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n             \n              >\n               \n\n                <Form.Item\n                  name=\"email\"\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      type: \"email\",\n                      message: t('warningemail1'),\n                    },\n                    {\n                      required: true,\n                      message: t('warningemail2'),\n                    },\n                   \n                  ]}\n                >\n                  <Input\n                    prefix={<MailFilled className=\"site-form-item-icon\" />}\n                    placeholder={t('email')}\n                  />\n                </Form.Item>\n\n                \n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                   \n                  >\n                    {t('resendactive')}\n                  </Button>\n\n                </Form.Item>\n              </Form>\n            </div>\n          </Col>\n\n          <Col\n            xs={{ span: 1 }}\n            sm={{ span: 3 }}\n            md={{ span: 6 }}\n            lg={{ span: 8 }}\n          >\n            1 col-order-responsive\n          </Col>\n        </Row>\n\n           \n\n            </div>\n         );\n    }\n}\n \nexport default ResendActivation;",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":5,"column":16,"nodeType":"114","messageId":"115","endLine":5,"endColumn":24},{"ruleId":"112","severity":1,"message":"117","line":6,"column":26,"nodeType":"114","messageId":"115","endLine":6,"endColumn":40},{"ruleId":"112","severity":1,"message":"118","line":7,"column":39,"nodeType":"114","messageId":"115","endLine":7,"endColumn":51},{"ruleId":"119","severity":1,"message":"120","line":32,"column":17,"nodeType":"121","endLine":32,"endColumn":56},{"ruleId":"112","severity":1,"message":"122","line":8,"column":48,"nodeType":"114","messageId":"115","endLine":8,"endColumn":56},{"ruleId":"123","severity":1,"message":"124","line":89,"column":19,"nodeType":"121","endLine":89,"endColumn":54},{"ruleId":"123","severity":1,"message":"124","line":102,"column":40,"nodeType":"121","endLine":102,"endColumn":51},{"ruleId":"125","severity":1,"message":"126","line":23,"column":32,"nodeType":"127","messageId":"128","endLine":23,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":27,"column":35,"nodeType":"127","messageId":"128","endLine":27,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":31,"column":35,"nodeType":"127","messageId":"128","endLine":31,"endColumn":37},{"ruleId":"112","severity":1,"message":"129","line":45,"column":12,"nodeType":"114","messageId":"115","endLine":45,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":52,"column":34,"nodeType":"127","messageId":"128","endLine":52,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":58,"column":37,"nodeType":"127","messageId":"128","endLine":58,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":62,"column":37,"nodeType":"127","messageId":"128","endLine":62,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":158,"column":19,"nodeType":"121","endLine":158,"endColumn":54},{"ruleId":"123","severity":1,"message":"124","line":171,"column":40,"nodeType":"121","endLine":171,"endColumn":51},{"ruleId":"112","severity":1,"message":"130","line":17,"column":3,"nodeType":"114","messageId":"115","endLine":17,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":63,"column":32,"nodeType":"127","messageId":"128","endLine":63,"endColumn":34},{"ruleId":"112","severity":1,"message":"131","line":88,"column":16,"nodeType":"114","messageId":"115","endLine":88,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":96,"column":34,"nodeType":"127","messageId":"128","endLine":96,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":101,"column":37,"nodeType":"127","messageId":"128","endLine":101,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":187,"column":58,"nodeType":"127","messageId":"128","endLine":187,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":236,"column":58,"nodeType":"127","messageId":"128","endLine":236,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":328,"column":64,"nodeType":"127","messageId":"128","endLine":328,"endColumn":66},{"ruleId":"119","severity":1,"message":"120","line":346,"column":23,"nodeType":"121","endLine":346,"endColumn":55},{"ruleId":"123","severity":1,"message":"132","line":347,"column":23,"nodeType":"121","endLine":347,"endColumn":100},{"ruleId":"119","severity":1,"message":"120","line":347,"column":100,"nodeType":"121","endLine":347,"endColumn":181},{"ruleId":"123","severity":1,"message":"132","line":362,"column":43,"nodeType":"121","endLine":362,"endColumn":71},{"ruleId":"125","severity":1,"message":"126","line":12,"column":45,"nodeType":"127","messageId":"128","endLine":12,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":22,"column":50,"nodeType":"127","messageId":"128","endLine":22,"endColumn":52},{"ruleId":"125","severity":1,"message":"126","line":42,"column":38,"nodeType":"127","messageId":"128","endLine":42,"endColumn":40},{"ruleId":"112","severity":1,"message":"133","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":24,"column":34,"nodeType":"127","messageId":"128","endLine":24,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":28,"column":38,"nodeType":"127","messageId":"128","endLine":28,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":41,"column":35,"nodeType":"127","messageId":"128","endLine":41,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":54,"column":24,"nodeType":"127","messageId":"128","endLine":54,"endColumn":26},{"ruleId":"123","severity":1,"message":"132","line":55,"column":36,"nodeType":"121","endLine":55,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":57,"column":30,"nodeType":"127","messageId":"128","endLine":57,"endColumn":32},{"ruleId":"123","severity":1,"message":"132","line":58,"column":36,"nodeType":"121","endLine":58,"endColumn":60},{"ruleId":"125","severity":1,"message":"134","line":64,"column":54,"nodeType":"127","messageId":"128","endLine":64,"endColumn":56},{"ruleId":"112","severity":1,"message":"135","line":2,"column":41,"nodeType":"114","messageId":"115","endLine":2,"endColumn":47},{"ruleId":"112","severity":1,"message":"122","line":2,"column":58,"nodeType":"114","messageId":"115","endLine":2,"endColumn":66},{"ruleId":"112","severity":1,"message":"136","line":2,"column":67,"nodeType":"114","messageId":"115","endLine":2,"endColumn":72},{"ruleId":"125","severity":1,"message":"126","line":19,"column":38,"nodeType":"127","messageId":"128","endLine":19,"endColumn":40},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'useTranslation' is defined but never used.","'DownOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Checkbox' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'t' is assigned a value but never used.","'ReloadOutlined' is defined but never used.","'i18n' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","Expected '!==' and instead saw '!='.","'Avatar' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]